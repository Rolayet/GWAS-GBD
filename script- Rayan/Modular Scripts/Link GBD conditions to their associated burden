#######################################################
### Merge the GBD conditions with their corresponding burden values for the year 2021 ###
#######################################################



# Load the GBD DALY data
gbd_daly_data <- read_csv('IHME-GBD_2021_DATA-120ebfcd-1.csv')

# Inspect the structure of the GBD DALY data
str(gbd_daly_data)


# List of causes in level 0, 1 and 2 to exclude (32)
exclude_causes <- c(
  "All causes", 
  "Communicable, maternal, neonatal, and nutritional diseases",
  "HIV/AIDS and sexually transmitted infections",
  "Respiratory infections and tuberculosis",
  "Enteric infections",
  "Neglected tropical diseases and malaria",
  "Other infectious diseases",
  "Maternal and neonatal disorders",
  "Nutritional deficiencies",
  "Non-communicable diseases",
  "Neoplasms",
  "Cardiovascular diseases",
  "Chronic respiratory diseases",
  "Digestive diseases",
  "Neurological disorders",
  "Mental disorders",
  "Substance use disorders",
  "Diabetes and kidney diseases",
  "Skin and subcutaneous diseases",
  "Sense organ diseases",
  "Musculoskeletal disorders",
  "Other non-communicable diseases",
  "Injuries",
  "Transport injuries",
  "Unintentional injuries",
  "Self-harm and interpersonal violence",
  "Other COVID-19 pandemic-related outcomes",
  "Total cancers",
  "Total burden related to hepatitis B",
  "Total burden related to hepatitis C",
  "Total burden related to Non-alcoholic fatty liver disease (NAFLD)",
  "Total Cancers excluding Non-melanoma skin cancer"
)

# Filter the dataset to exclude the specified causes
gbd_daly_data <- gbd_daly_data %>%
  filter(!cause_name %in% exclude_causes)

# Additional causes under injuries category to exclude (37)
additional_exclude_causes <- c(
  "Road injuries",
  "Pedestrian road injuries",
  "Cyclist road injuries",
  "Motorcyclist road injuries",
  "Motor vehicle road injuries",
  "Other road injuries",
  "Other transport injuries",
  "Falls",
  "Drowning",
  "Fire, heat, and hot substances",
  "Poisonings",
  "Poisoning by carbon monoxide",
  "Poisoning by other means",
  "Exposure to mechanical forces",
  "Unintentional firearm injuries",
  "Other exposure to mechanical forces",
  "Adverse effects of medical treatment",
  "Animal contact",
  "Venomous animal contact",
  "Non-venomous animal contact",
  "Foreign body",
  "Pulmonary aspiration and foreign body in airway",
  "Foreign body in eyes",
  "Foreign body in other body part",
  "Environmental heat and cold exposure",
  "Exposure to forces of nature",
  "Other unintentional injuries",
  "Self-harm",
  "Self-harm by firearm",
  "Self-harm by other specified means",
  "Interpersonal violence",
  "Physical violence by firearm",
  "Physical violence by sharp object",
  "Sexual violence",
  "Physical violence by other means",
  "Conflict and terrorism",
  "Police conflict and executions"
)

# Combine the original exclude list with the additional causes
exclude_causes <- c(exclude_causes, additional_exclude_causes)

# Filter the dataset to exclude the specified causes
gbd_daly_data <- gbd_daly_data %>%
  filter(!cause_name %in% exclude_causes)


 

## Assessing the relationship between GWAS attention and global need, using an inequality measure.This will be done via filtering the data by Number of DALY and then merging by GBD term.


gbd_daly_data <- gbd_daly_data %>%
  filter(metric_name == "Number") %>%
  rename(`GBD term`= cause_name, DALY = val)


# Merge the DALY values into the combined dataset
combined_dataset <- combined_dataset %>%
  left_join(gbd_daly_data, by = c("GBD term" = "GBD term"))


# Verify the merge
head(combined_dataset)


# Verify the data
summary(combined_dataset$total_attention_score)
summary(combined_dataset$DALY)

#write.csv(combined_dataset, "combined_dataset_ncase.csv", row.names = FALSE)



## Check any difference or duplicates between combined dataset and the data set that we started with in the manual mapping (Duplicate check).  


unmatched_gbd_terms <- anti_join(gbd_daly_data, combined_dataset, by = c("GBD term" = "GBD term"))

unmatched_gbd_terms <- unmatched_gbd_terms %>%
  distinct(`GBD term`, .keep_all = TRUE)

# Get the unique GBD terms in each dataset
combined_gbd_terms <- unique(combined_dataset$`GBD term`)
gbd_gbd_terms <- unique(gbd_daly_data$`GBD term`)

# Identify terms in combined_dataset not in gbd_daly_data
terms_only_in_combined <- setdiff(combined_gbd_terms, gbd_gbd_terms)

# Identify terms in gbd_daly_data not in combined_dataset
terms_only_in_gbd_daly <- setdiff(gbd_gbd_terms, combined_gbd_terms)

# Get the lengths of the unique terms
len_combined <- length(terms_only_in_combined)
len_gbd_daly <- length(terms_only_in_gbd_daly)

# Determine the maximum length to ensure both columns in the data frame have the same number of rows
max_length <- max(len_combined, len_gbd_daly)

# Combine the differences into a data frame for better visualization
diff_2 <- data.frame(
  Terms_Only_in_Combined_Dataset = c(terms_only_in_combined, rep(NA, max_length - len_combined)),
  Terms_Only_in_GBD_Daly_Dataset = c(terms_only_in_gbd_daly, rep(NA, max_length - len_gbd_daly))
)

# the differences
(diff_2)

#write.csv(diff_2, "diff_2.csv", row.names = FALSE)
#write.csv(combined_dataset, "combined_dataset_ncase.csv", row.names = FALSE)
