#######################################################
### Finding a match via EFO between GWAS and GBD – Part 1 (GBD terms without descendants) ###
#######################################################

## Read the data 

First_part_GBD<- read_xlsx("First_part_GBD.xlsx")

str(First_part_GBD)

  # unique matched rows  by GBD term
First_part_GBD<- First_part_GBD%>%
  distinct(`GBD term`, .keep_all = TRUE)

 


## Include only GBD terms at levels 3 and 4 within the Communicable and Non-Communicable Diseases categories (308 terms).
This means:
-Exclude all terms at levels 0, 1, and 2 under the Communicable Diseases, Non-Communicable Diseases, Injury, and All Causes categories (32 terms).
-Exclude the rest of gbd terms in the Injury category at levels 3 and 4 (37 terms).
Notes: The total number of GBD terms across all categories and levels is 377. All Causes category does not have gbd terms in level 3 and 4


# List of causes in level 0, 1 and 2 to exclude in Communicable Diseases, Non-Communicable Diseases, Injury and All Causes categories
exclude_causes <- c(
  "All causes", 
  "Communicable, maternal, neonatal, and nutritional diseases",
  "HIV/AIDS and sexually transmitted infections",
  "Respiratory infections and tuberculosis",
  "Enteric infections",
  "Neglected tropical diseases and malaria",
  "Other infectious diseases",
  "Maternal and neonatal disorders",
  "Nutritional deficiencies",
  "Non-communicable diseases",
  "Neoplasms",
  "Cardiovascular diseases",
  "Chronic respiratory diseases",
  "Digestive diseases",
  "Neurological disorders",
  "Mental disorders",
  "Substance use disorders",
  "Diabetes and kidney diseases",
  "Skin and subcutaneous diseases",
  "Sense organ diseases",
  "Musculoskeletal disorders",
  "Other non-communicable diseases",
  "Injuries",
  "Transport injuries",
  "Unintentional injuries",
  "Self-harm and interpersonal violence",
  "Other COVID-19 pandemic-related outcomes",
  "Total cancers",
  "Total burden related to hepatitis B",
  "Total burden related to hepatitis C",
  "Total burden related to Non-alcoholic fatty liver disease (NAFLD)",
  "Total Cancers excluding Non-melanoma skin cancer"
)

# Filter the dataset to exclude the specified causes
First_part_GBD <- First_part_GBD %>%
  filter(!`GBD term` %in% exclude_causes)

# Additional causes under injuries category to exclude in level 3 and 4 
additional_exclude_causes <- c(
  "Road injuries",
  "Pedestrian road injuries",
  "Cyclist road injuries",
  "Motorcyclist road injuries",
  "Motor vehicle road injuries",
  "Other road injuries",
  "Other transport injuries",
  "Falls",
  "Drowning",
  "Fire, heat, and hot substances",
  "Poisonings",
  "Poisoning by carbon monoxide",
  "Poisoning by other means",
  "Exposure to mechanical forces",
  "Unintentional firearm injuries",
  "Other exposure to mechanical forces",
  "Adverse effects of medical treatment",
  "Animal contact",
  "Venomous animal contact",
  "Non-venomous animal contact",
  "Foreign body",
  "Pulmonary aspiration and foreign body in airway",
  "Foreign body in eyes",
  "Foreign body in other body part",
  "Environmental heat and cold exposure",
  "Exposure to forces of nature",
  "Other unintentional injuries",
  "Self-harm",
  "Self-harm by firearm",
  "Self-harm by other specified means",
  "Interpersonal violence",
  "Physical violence by firearm",
  "Physical violence by sharp object",
  "Sexual violence",
  "Physical violence by other means",
  "Conflict and terrorism",
  "Police conflict and executions"
  )

# Combine the original exclude list with the additional causes
exclude_causes <- c(exclude_causes, additional_exclude_causes)

# Filter the dataset to exclude the specified causes
First_part_GBD <- First_part_GBD %>%
  filter(!`GBD term` %in% exclude_causes)





## Specify columns that contain EFO terms
efo_columns <- c("EFO 1", "EFO 2", "EFO 3", "EFO 4", "EFO 5", "EFO 6", 
                 "EFO 7", "EFO 8", "EFO 9", "EFO 10", "EFO 11", "EFO 12",
                 "EFO 13", "EFO 14", "EFO 15", "EFO 16", "EFO 17", "EFO 18",
                 "EFO 19", "EFO 20", "EFO 21", "EFO 22", "EFO 23", "EFO 24",
                 "EFO 25", "EFO 26", "EFO 27", "EFO 28", "EFO 29", "EFO 30")


## Reshape the GBD data to gather all relevant columns into key-value pairs and drop rows with NA EFO terms

gbd_long <- First_part_GBD%>%
pivot_longer(cols = all_of(efo_columns), names_to = "EFO_number", values_to =  "MAPPED_TRAIT_URI") %>% drop_na(MAPPED_TRAIT_URI) 

gbd_long


## Ensure consistent formatting, cleaning and standardize MAPPED_TRAIT_URI in gbd_long (GBD file)
-There are many functions because each time I attempted to find a matching, I was unable to do so due to the differences in the two datasets. For example, in GWAS, the identifiers have underscores, while in GBD they have colons, and so on... Therefore, the functions below are intended to unify these differences.

# Ensure consistent formatting
gbd_long$MAPPED_TRAIT_URI <- tolower(trimws(gbd_long$MAPPED_TRAIT_URI))

# Ensure lowercase
gbd_long$MAPPED_TRAIT_URI <- tolower(gbd_long$MAPPED_TRAIT_URI) 

# Trim leading/trailing whitespace
gbd_long$MAPPED_TRAIT_URI <- trimws(gbd_long$MAPPED_TRAIT_URI) 

# Remove all spaces
gbd_long$MAPPED_TRAIT_URI <- gsub("\\s+", "", gbd_long$MAPPED_TRAIT_URI) 

# Remove all internal spaces explicitly
gbd_long$MAPPED_TRAIT_URI <- gsub(" ", "", gbd_long$MAPPED_TRAIT_URI) 

# Convert to lowercase and remove spaces 
gbd_long$MAPPED_TRAIT_URI <- tolower(gsub("\\s+", "", gbd_long$MAPPED_TRAIT_URI)) 

# Remove colons and spaces
gbd_long$MAPPED_TRAIT_URI <- gsub("[:\\s]", "", gbd_long$MAPPED_TRAIT_URI)  

# Remove quotation marks
gbd_long$MAPPED_TRAIT_URI <- gsub("\"", "", gbd_long$MAPPED_TRAIT_URI) 

# Replace _ with : 
gbd_long$MAPPED_TRAIT_URI <- gsub("_", ":", gbd_long$MAPPED_TRAIT_URI) 

# Remove all extra spaces
gbd_long$MAPPED_TRAIT_URI <- str_squish(gbd_long$MAPPED_TRAIT_URI) 

(head(gbd_long$MAPPED_TRAIT_URI, 20))



## Ensure consistent formatting, cleaning and standardize MAPPED_TRAIT_URI in attention (GWAS file) and remove rows with NA in MAPPED_TRAIT_URI (EFO terms)

# Function to clean and standardize MAPPED_TRAIT_URI
clean_mapped_trait_uri <- function(uri) {
  # Convert to lowercase
  uri <- tolower(uri)
  # Trim leading/trailing whitespace
  uri <- trimws(uri)
  # Remove all internal spaces explicitly
  uri <- gsub("\\s+", "", uri)
  # Remove quotation marks
  uri <- gsub("\"", "", uri)
  # Replace _ with :
  uri <- gsub("_", ":", uri)
  # Remove colons and spaces
  uri <- gsub("[:\\s]", "", uri)
  # Remove prefixes and ensure consistency
  uri <- sub(".*[:/]", "", uri)
  return(uri)
}

# Apply the function to MAPPED_TRAIT_URI column
attention$MAPPED_TRAIT_URI <- clean_mapped_trait_uri(attention$MAPPED_TRAIT_URI)


# Convert "na" strings to actual NA values
attention$MAPPED_TRAIT_URI[attention$MAPPED_TRAIT_URI == "na"] <- NA

# Remove rows with NA in MAPPED_TRAIT_URI
attention <- attention %>%
  filter(!is.na(MAPPED_TRAIT_URI))

(head(attention$MAPPED_TRAIT_URI, 20))



### Finding a match between GWAS and GBD (First_part_GBD) via identifiers (EFO terms)- for those with no descendants. Then grouping those terms by GBD term and PUBMEDID (as we need to ensure the studies are independent when we sum the n ).

# Merge the data frames
merged_data <- merge(attention, gbd_long, by = "MAPPED_TRAIT_URI", all.x = TRUE)

# Identify matched rows
matched_rows <- inner_join(attention, gbd_long, by = "MAPPED_TRAIT_URI")

 
 # Group by GBD term  and summarize within these groups 
intermediate_summary <- matched_rows %>%
  group_by(`GBD term`,PUBMEDID) %>%
  summarise(
    total_ncase = sum(total_ncase, na.rm = TRUE),
    .groups = "drop"
  )
   
 # Group by GBD term  and summarize within these groups 
unique_matched_gbd_terms_First_part_GBD <- intermediate_summary %>%
  group_by(`GBD term`) %>%
  summarise(
    total_ncase = sum(total_ncase, na.rm = TRUE),
    .groups = "drop"
  )


# Identify unmatched rows from attention
unmatched_attention <- anti_join(attention, gbd_long, by = "MAPPED_TRAIT_URI")

# Identify unmatched rows from gbd_long
unmatched_gbd <- anti_join(gbd_long, attention, by = "MAPPED_TRAIT_URI")

# Ensure unique unmatched_gbd rows by GBD term
unmatched_gbd_unique <- unmatched_gbd %>%
  distinct(`GBD term`, .keep_all = TRUE)

# Extract unique GBD terms for matched and unmatched entries
matched_gbd_terms <- unique_matched_gbd_terms_First_part_GBD$`GBD term` %>% unique()
unmatched_gbd_terms <- unmatched_gbd_unique$`GBD term` %>% unique()

# Remove any GBD terms from unmatched_gbd that are also in matched_rows
unique_unmatched_gbd_terms <- setdiff(unmatched_gbd_terms, matched_gbd_terms)

# Ensure unique unmatched_gbd rows by GBD term
unique_unmatched_gbd_terms_First_part_GBD <- unmatched_gbd_unique %>%
  filter(`GBD term` %in% unique_unmatched_gbd_terms)

head(unique_matched_gbd_terms_First_part_GBD)

# Save the data frames to Excel files
#write.xlsx(unique_matched_gbd_terms_First_part_GBD, "unique_matched_gbd_terms_First_part_GBD.xlsx")
#write.xlsx(unique_unmatched_gbd_terms_First_part_GBD, "unique_unmatched_gbd_terms_First_part_GBD.xlsx") 
