
#######################################################
### Generate GWAS attention scores from GWAS Catalog using EFO Term, Weighted_n, nhits, weighted_nhits and weighted_attention_score_impact_factor###
#######################################################

Read the GWAS Catalog data and Load necessary libraries
```{r}

library(dplyr)
library(data.table)
library(tidyr)
library(stringr)
library(DescTools)
library(ggplot2)
library(stats)
library(readr)
library(ontologyIndex)
library(readxl)
library(openxlsx)
library(boot)
library(LorenzRegression)

a <- read_xlsx("gwas_catalog_v1.0.2.1-studies_r2024-06-07.xlsx")



```
Have a look at the data

```{r}
hist(a$`ASSOCIATION COUNT`, breaks=100)
```
Sometimes there is more than one EFO term (comma separated). Split them into separate lines

```{r}
head(a, 10)

a <- a %>%
    tidyr::separate_rows(MAPPED_TRAIT_URI, sep = ", ")

head(a, 10)

```

Get the number of EFO terms per publication

```{r}
pubmed_count <- a %>% group_by(PUBMEDID) %>% 
    summarise(
        n_efo = length(unique(MAPPED_TRAIT_URI))
    ) %>% arrange(desc(n_efo))

pubmed_count

```

Add the EFO count per PUBMEDID to the data frame

```{r}
a <- left_join(a, pubmed_count, by="PUBMEDID")
str(a)
```

Step 1. Develop the attention scores

- n = number of studies with that EFO term
- weighted_n = weighted by number of EFO terms in the study in total
- nhits = number of GWAS hits reported for that EFO term
- weighted_nhits = nhits weighted by number of EFO terms in the study in total

```{r}
attention <- a %>% group_by(
    MAPPED_TRAIT_URI
) %>% 
    summarise(
        n = n(), 
        weighted_n = sum(1/n_efo),
        nhits = sum(`ASSOCIATION COUNT`),
        weighted_nhits = sum(`ASSOCIATION COUNT` / n_efo)
    )

str(attention)

```

Removing extra whitespace, cleaning the Impact factor values and ensure the values are numeric 

```{r}
# Remove extra whitespace
a$`Impact factor` <- trimws(a$`Impact factor`)

# Replace non-standard characters
a$`Impact factor` <- gsub("Â·", ".", a$`Impact factor`)

# Convert to numeric, forcing non-numeric values to NA (for those with no impact factors)
a$`Impact factor` <- as.numeric(a$`Impact factor`)

# Replace NA values with 0
a$`Impact factor`[is.na(a$`Impact factor`)] <- 0

# Verify the changes
str(a)
unique(a$`Impact factor`)
summary(a$`Impact factor`)


```

 Including the impact factor values after preparing and cleaning the attention scores. Additionally, we have added the PUBMEDID to ensure that the studies are independent when we sum up the "n." We also added DISEASE/TRAIT for matching via str_detect function if we did not find a match via EFO terms. 
 
```{r}


# Including the impact factor and (`DISEASE/TRAIT`) column for matching and PUBMEDID to ensure the the studies are independent during the mapping process 

attention <- a %>%
  group_by(MAPPED_TRAIT_URI) %>%
  summarise(
    n = n(), 
    weighted_n = sum(1 / n_efo),
    nhits = sum(`ASSOCIATION COUNT`),
    weighted_nhits = sum(`ASSOCIATION COUNT` / n_efo),
    weighted_attention_score_impact_factor = sum((1 / n_efo) * `Impact factor`, na.rm = TRUE),
     DISEASE_TRAIT = paste(unique(`DISEASE/TRAIT`), collapse = "; "),
    PUBMEDID = paste(unique(PUBMEDID), collapse = ", ")
  )


# Expand PUBMEDID into separate rows
attention <- attention %>%
  separate_rows(PUBMEDID, sep = ", ") 


str(attention)
